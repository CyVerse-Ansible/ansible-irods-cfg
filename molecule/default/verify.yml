---
- name: Verify | default variables generate correct client side irods_environment
  hosts: localhost
  connection: local
  vars_files:
    - ../../vars/main.yml
    - ../../vars/irods_environment_client.yml
  vars:
    irods_environment: >-
      {{ lookup('ansible.builtin.template', '../../templates/irods_environment.json.j2') }}
  tasks:
    - name: Verify irods_environment.json expands correctly
      ansible.builtin.assert:
        that:
          - irods_environment.irods_authentication_file is not defined
          - irods_environment.irods_authentication_scheme is not defined
          - irods_environment.irods_client_server_negotiation is not defined
          - irods_environment.irods_client_server_policy is not defined
          - irods_environment.irods_connection_pool_refresh_time_in_seconds is not defined
          - irods_environment.irods_cwd is not defined
          - irods_environment.irods_debug is not defined
          - irods_environment.irods_default_hash_scheme is not defined
          - irods_environment.irods_default_resource is not defined
          - irods_environment.irods_encryption_algorithm is not defined
          - irods_environment.irods_encryption_key_size is not defined
          - irods_environment.irods_encryption_num_hash_rounds is not defined
          - irods_environment.irods_encryption_salt_size is not defined
          - irods_environment.irods_gsi_server_dn is not defined
          - irods_environment.irods_home is not defined
          - irods_environment.irods_host == 'localhost'
          - irods_environment.irods_log_level is not defined
          - irods_environment.irods_match_hash_policy is not defined
          - irods_environment.irods_plugins_home is not defined
          - irods_environment.irods_port == 1247
          - irods_environment.irods_server_control_plane_encryption_algorithm is not defined
          - irods_environment.irods_server_control_plane_encryption_num_hash_rounds is not defined
          - irods_environment.irods_server_control_plane_key is not defined
          - irods_environment.irods_server_control_plane_port is not defined
          - irods_environment.irods_ssl_ca_certificate_file is not defined
          - irods_environment.irods_ssl_ca_certificate_path is not defined
          - irods_environment.irods_ssl_certificate_chain_file is not defined
          - irods_environment.irods_ssl_certificate_key_file is not defined
          - irods_environment.irods_ssl_dh_params_file is not defined
          - irods_environment.irods_ssl_verify_server is not defined
          - irods_environment.irods_user_name == 'rods'
          - irods_environment.irods_xmsg_host is not defined
          - irods_environment.irods_xmsg_port is not defined
          - irods_environment.irods_zone_name == 'tempZone'
          - irods_environment.schema_name == 'client_environment'
          - irods_environment.schema_version == 'v3'


- name: Verify | default variables generate correct server side irods_environment
  hosts: localhost
  gather_facts: false
  vars_files:
    - vars/irods_environment_server.yml
    - ../../vars/main.yml
    - ../../vars/irods_environment_server.yml
  vars:
    irods_environment: >-
      {{ lookup('ansible.builtin.template', '../../templates/irods_environment.json.j2') }}
  tasks:
    - name: Verify irods_environment.json expands correctly
      ansible.builtin.assert:
        that:
          - irods_environment.irods_authentication_file == '/var/lib/irods/.irods/.irodsA'
          - irods_environment.irods_authentication_scheme is not defined
          - irods_environment.irods_client_server_negotiation == 'request_server_negotiation'
          - irods_environment.irods_client_server_policy == 'CS_NEG_DONT_CARE'
          - irods_environment.irods_connection_pool_refresh_time_in_seconds == 300
          - irods_environment.irods_cwd == '/tempZone/home/rods'
          - irods_environment.irods_debug is not defined
          - irods_environment.irods_default_hash_scheme == 'SHA256'
          - irods_environment.irods_default_resource == 'demoResc'
          - irods_environment.irods_encryption_algorithm == 'AES-256-CBC'
          - irods_environment.irods_encryption_key_size == 32
          - irods_environment.irods_encryption_num_hash_rounds == 16
          - irods_environment.irods_encryption_salt_size == 8
          - irods_environment.irods_gsi_server_dn is not defined
          - irods_environment.irods_home == '/tempZone/home/rods'
          - irods_environment.irods_host == 'localhost'
          - irods_environment.irods_log_level is not defined
          - irods_environment.irods_match_hash_policy == 'compatible'
          - irods_environment.irods_plugins_home is not defined
          - irods_environment.irods_port == 1247
          - irods_environment.irods_server_control_plane_encryption_algorithm == 'AES-256-CBC'
          - irods_environment.irods_server_control_plane_encryption_num_hash_rounds == 16
          - irods_environment.irods_server_control_plane_key == 'TEMPORARY__32byte_ctrl_plane_key'
          - irods_environment.irods_server_control_plane_port == 1248
          - irods_environment.irods_ssl_ca_certificate_file is not defined
          - irods_environment.irods_ssl_ca_certificate_path is not defined
          - irods_environment.irods_ssl_certificate_chain_file is not defined
          - irods_environment.irods_ssl_certificate_key_file is not defined
          - irods_environment.irods_ssl_dh_params_file is not defined
          - irods_environment.irods_ssl_verify_server is not defined
          - irods_environment.irods_user_name == 'rods'
          - irods_environment.irods_xmsg_host is not defined
          - irods_environment.irods_xmsg_port is not defined
          - irods_environment.irods_zone_name == 'tempZone'
          - irods_environment.schema_name == 'service_account_environment'
          - irods_environment.schema_version == 'v3'


- name: Verify | default variables generate correct server_config
  hosts: localhost
  gather_facts: false
  vars_files:
    - ../../vars/main.yml
    - ../../vars/server_config.yml
  vars:
    server_config: >-
      {{ lookup('ansible.builtin.template', '../../templates/server_config.json.j2') }}
  tasks:
    - name: Verify server_config.json is correct
      ansible.builtin.assert:
        that:
          - server_config.advanced_settings.default_number_of_transfer_threads == 4
          - server_config.advanced_settings.default_temporary_password_lifetime_in_seconds == 120
          - >-
            server_config.advanced_settings.maximum_number_of_concurrent_rule_engine_server_processes
            == 4
          - server_config.advanced_settings.maximum_size_for_single_buffer_in_megabytes == 32
          - server_config.advanced_settings.maximum_temporary_password_lifetime_in_seconds == 1000
          - server_config.advanced_settings.rule_engine_server_sleep_time_in_seconds == 30
          - >-
            server_config.advanced_settings.transfer_buffer_size_for_parallel_transfer_in_megabytes
            == 4
          - >-
            server_config.advanced_settings.transfer_chunk_size_for_parallel_transfer_in_megabytes
            == 40
          - server_config.catalog_provider_hosts|length == 1
          - server_config.catalog_provider_hosts[0] == 'localhost'
          - server_config.catalog_service_role == 'provider'
          - server_config.default_dir_mode == '0750'
          - server_config.default_file_mode == '0600'
          - server_config.default_hash_scheme == 'SHA256'
          - server_config.default_resource_directory is not defined
          - server_config.environment_variables == {}
          - server_config.federation|length == 0
          - server_config.kerberos_name is not defined
          - server_config.match_hash_policy == 'compatible'
          - server_config.negotiation_key == 'TEMPORARY_32byte_negotiation_key'
          - server_config.pam_no_extend is not defined
          - server_config.pam_password_length is not defined
          - server_config.pam_password_max_time is not defined
          - server_config.pam_password_min_time is not defined
          - server_config.plugin_configuration.rule_engines|length == 2
          - >-
            server_config.plugin_configuration.rule_engines[0].plugin_name
            == 'irods_rule_engine_plugin-irods_rule_language'
          - >-
            server_config.plugin_configuration.rule_engines[0].plugin_specific_configuration.re_data_variable_mapping_set
              | length
            == 1
          - >-
            server_config.plugin_configuration.rule_engines[0].plugin_specific_configuration.re_data_variable_mapping_set[0]
            == 'core'
          - >-
            server_config.plugin_configuration.rule_engines[0].plugin_specific_configuration.re_function_name_mapping_set
              | length
            == 1
          - >-
            server_config.plugin_configuration.rule_engines[0].plugin_specific_configuration.re_data_variable_mapping_set[0]
            == 'core'
          - >-
            server_config.plugin_configuration.rule_engines[0].plugin_specific_configuration.re_rulebase_set
              | length
            == 1
          - >-
            server_config.plugin_configuration.rule_engines[0].plugin_specific_configuration.re_rulebase_set[0]
            == 'core'
          - server_config.rule_engine_namespaces | length == 1
          - server_config.rule_engine_namespaces[0] == ''
          - server_config.schema_name == 'server_config'
          - server_config.schema_validation_base_uri == 'https://schemas.irods.org/configuration'
          - server_config.schema_version == 'v3'
          - server_config.server_control_plane_encryption_algorithm == 'AES-256-CBC'
          - server_config.server_control_plane_encryption_num_hash_rounds == 16
          - server_config.server_control_plane_key == 'TEMPORARY__32byte_ctrl_plane_key'
          - server_config.server_control_plane_port == 1248
          - server_config.server_control_plane_timeout_milliseconds == 10000
          - server_config.server_port_range_start == 20000
          - server_config.server_port_range_end == 20199
          - server_config.xmsg_port == 1279
          - server_config.zone_auth_scheme == 'native'
          - server_config.zone_key == 'TEMPORARY_zone_key'
          - server_config.zone_name == 'tempZone'
          - server_config.zone_port == 1247
          - server_config.zone_user == 'rods'


- name: Verify | default variables generate correct remaining configuration files
  hosts: localhost
  gather_facts: false
  vars_files:
    - ../../vars/main.yml
  vars:
    hacc: >-
      {{ lookup('ansible.builtin.template', '../../templates/host_access_control_config.json.j2') }}
    hosts_config: "{{ lookup('ansible.builtin.template', '../../templates/hosts_config.json.j2') }}"
    service_account: >-
      {{ lookup('ansible.builtin.template', '../../templates/service_account.config.j2') }}
  tasks:
    - name: Verify that derived irods_cfg_icat is null
      ansible.builtin.assert:
        that: _icat is not mapping

    - name: Verify host_access_control_config.json is correct
      ansible.builtin.assert:
        that:
          - hacc.access_entries | length == 0
          - hacc.schema_name == 'host_access_control_config'
          - hacc.schema_version == 'v3'

    - name: Verify hosts_config.json is correct
      ansible.builtin.assert:
        that:
          - hosts_config.host_entries | length == 0
          - hosts_config.schema_name == 'hosts_config'
          - hosts_config.schema_version == 'v3'

    - name: Verify service_account.config is correct
      ansible.builtin.assert:
        that:
          - service_account is search('IRODS_SERVICE_ACCOUNT_NAME=irods')
          - service_account is search('IRODS_SERVICE_GROUP_NAME=irods')


- name: Verify | host_access_control_config options
  hosts: localhost
  gather_facts: false
  vars_files:
    - vars/host_access_control_config_opts.yml
    - ../../vars/main.yml
  vars:
    hacc: >-
      {{ lookup('ansible.builtin.template', '../../templates/host_access_control_config.json.j2') }}
  tasks:
    - name: Verify entries
      ansible.builtin.assert:
        that:
          - hacc.access_entries | length == 2
          - hacc.access_entries[0].address == 'address1'
          - hacc.access_entries[1].group == 'group2'
          - hacc.access_entries[0].mask == 'mask1'
          - hacc.access_entries[1].user == 'user2'


- name: Verify | hosts_config options
  hosts: localhost
  gather_facts: false
  vars_files:
    - vars/hosts_config_opts.yml
    - ../../vars/main.yml
  vars:
    hosts_config: "{{ lookup('ansible.builtin.template', '../../templates/hosts_config.json.j2') }}"
  tasks:
    - name: Verify entries
      ansible.builtin.assert:
        that:
          - hosts_config.host_entries | length == 2
          - hosts_config.host_entries[0].address_type == 'local'
          - hosts_config.host_entries[0].addresses | length == 1
          - hosts_config.host_entries[0].addresses[0].address == 'my.host.com'
          - hosts_config.host_entries[1].address_type == 'remote'
          - hosts_config.host_entries[1].addresses | length == 2
          - hosts_config.host_entries[1].addresses[1].address == '1.2.3.4'


- name: Verify | irods_environment options
  hosts: localhost
  gather_facts: false
  vars_files:
    - vars/irods_environment_opts.yml
    - vars/irods_environment_server.yml
    - ../../vars/main.yml
    - ../../vars/irods_environment_server.yml
  vars:
    irods_environment: >-
      {{ lookup('ansible.builtin.template', '../../templates/irods_environment.json.j2') }}
  tasks:
    - name: Verify irods_environment
      ansible.builtin.assert:
        that:
          - irods_environment.irods_authentication_file == '/auth'
          - irods_environment.irods_authentication_scheme == 'gsi'
          - irods_environment.irods_client_server_negotiation == 'off'
          - irods_environment.irods_client_server_policy == 'CS_NEG_REFUSE'
          - irods_environment.irods_connection_pool_refresh_time_in_seconds == 100
          - irods_environment.irods_cwd == '/zone'
          - irods_environment.irods_debug == 'CAT'
          - irods_environment.irods_default_hash_scheme == 'MD5'
          - irods_environment.irods_default_resource == 'resource'
          - irods_environment.irods_encryption_algorithm == 'algorithm'
          - irods_environment.irods_encryption_key_size == 1
          - irods_environment.irods_encryption_num_hash_rounds == 2
          - irods_environment.irods_encryption_salt_size == 3
          - irods_environment.irods_gsi_server_dn == 'dn'
          - irods_environment.irods_home == '/zone/home'
          - irods_environment.irods_host == 'host'
          - irods_environment.irods_log_level == 4
          - irods_environment.irods_match_hash_policy == 'strict'
          - irods_environment.irods_plugins_home == '/plugins'
          - irods_environment.irods_port == 7
          - irods_environment.irods_server_control_plane_encryption_algorithm == 'svr_alg'
          - irods_environment.irods_server_control_plane_encryption_num_hash_rounds == 3
          - irods_environment.irods_server_control_plane_key == 'TEMPORARY__32byte_ctrl_plane_ke1'
          - irods_environment.irods_server_control_plane_port == 5
          - irods_environment.irods_ssl_ca_certificate_file == 'certificate_file'
          - irods_environment.irods_ssl_ca_certificate_path == '/path/to/certificates'
          - irods_environment.irods_ssl_certificate_chain_file == 'chain'
          - irods_environment.irods_ssl_certificate_key_file == 'key_file'
          - irods_environment.irods_ssl_dh_params_file == 'params_file'
          - irods_environment.irods_ssl_verify_server == 'cert'
          - irods_environment.irods_user_name == 'user'
          - irods_environment.irods_xmsg_host == 'xmsg_host'
          - irods_environment.irods_xmsg_port == 6
          - irods_environment.irods_zone_name == 'zone'


- name: Verify | server_config options
  hosts: localhost
  gather_facts: false
  vars_files:
    - vars/server_config_opts.yml
    - ../../vars/main.yml
    - ../../vars/server_config.yml
  vars:
    server_config: >-
      {{ lookup('ansible.builtin.template', '../../templates/server_config.json.j2') }}
  tasks:
    - name: Verify optional fields
      ansible.builtin.assert:
        that:
          - server_config.advanced_settings.default_number_of_transfer_threads == 16
          - server_config.advanced_settings.default_temporary_password_lifetime_in_seconds == 1
          - >-
            server_config.advanced_settings.maximum_number_of_concurrent_rule_engine_server_processes
            == 2
          - server_config.advanced_settings.maximum_size_for_single_buffer_in_megabytes == 3
          - server_config.advanced_settings.maximum_temporary_password_lifetime_in_seconds == 4
          - server_config.advanced_settings.rule_engine_server_sleep_time_in_seconds == 20
          - >-
            server_config.advanced_settings.transfer_buffer_size_for_parallel_transfer_in_megabytes
            == 32
          - >-
            server_config.advanced_settings.transfer_chunk_size_for_parallel_transfer_in_megabytes
            == 5
          - server_config.catalog_provider_hosts|length == 2
          - server_config.catalog_provider_hosts[0] == 'provider1'
          - server_config.catalog_service_role == 'consumer'
          - server_config.default_resource_directory == 'vault'
          - server_config.default_resource_name == 'resc'
          - server_config.environment_variables.IRODS_DATABASE_USER_PASSWORD_SALT == 'salt'
          - server_config.environment_variables.var1 == 'val1'
          - server_config.environment_variables.var2 == 'val2'
          - server_config.federation|length == 2
          - server_config.federation[0].catalog_provider_hosts|length == 3
          - server_config.federation[0].catalog_provider_hosts[0] == 'icat1'
          - server_config.federation[0].zone_name == 'zone1'
          - server_config.federation[0].zone_key == 'key1'
          - server_config.federation[0].negotiation_key == 'TEMPORARY_32byte_negotiation_ke1'
          - server_config.kerberos_name == 'kerberos'
          - server_config.pam_no_extend == true
          - server_config.pam_password_length == 0
          - server_config.pam_password_max_time == 1
          - server_config.pam_password_min_time == 2
          - >-
            server_config.plugin_configuration.rule_engines[0].plugin_specific_configuration.re_data_variable_mapping_set
              | length
            == 3
          - >-
            server_config.plugin_configuration.rule_engines[0].plugin_specific_configuration.re_data_variable_mapping_set[0]
            == 'dvm1'
          - >-
            server_config.plugin_configuration.rule_engines[0].plugin_specific_configuration.re_data_variable_mapping_set[2]
            == 'core'
          - >-
            server_config.plugin_configuration.rule_engines[0].plugin_specific_configuration.re_function_name_mapping_set
              | length
            == 3
          - >-
            server_config.plugin_configuration.rule_engines[0].plugin_specific_configuration.re_function_name_mapping_set[1]
            == 'fnm2'
          - >-
            server_config.plugin_configuration.rule_engines[0].plugin_specific_configuration.re_function_name_mapping_set[2]
            == 'core'
          - >-
            server_config.plugin_configuration.rule_engines[0].plugin_specific_configuration.re_rulebase_set
              | length
            == 3
          - >-
            server_config.plugin_configuration.rule_engines[0].plugin_specific_configuration.re_rulebase_set[0]
            == 're1'
          - >-
            server_config.plugin_configuration.rule_engines[0].plugin_specific_configuration.re_rulebase_set[2]
            == 'core'
          - server_config.xmsg_port == 3


- name: Verify | default database plugin configuration
  hosts: localhost
  gather_facts: false
  vars_files:
    - vars/database_plugin_defaults.yml
    - ../../vars/main.yml
    - ../../vars/server_config.yml
    - ../../vars/postgres.yml
  vars:
    server_config: >-
      {{ lookup('ansible.builtin.template', '../../templates/server_config.json.j2') }}
  tasks:
    - name: Verify server_config.plugin_configuration.database is correct
      ansible.builtin.assert:
        that:
          - server_config.plugin_configuration.database.postgres.db_host == 'localhost'
          - server_config.plugin_configuration.database.postgres.db_name == 'ICAT'
          - server_config.plugin_configuration.database.postgres.db_odbc_driver == 'PostgreSQL'
          - server_config.plugin_configuration.database.postgres.db_password == 'testpassword'
          - server_config.plugin_configuration.database.postgres.db_port == 5432
          - server_config.plugin_configuration.database.postgres.db_username == 'irods'


- name: Verify | database plugin configuration
  hosts: localhost
  gather_facts: false
  vars_files:
    - vars/database_plugin_opts.yml
    - ../../vars/main.yml
    - ../../vars/server_config.yml
    - ../../vars/mysql.yml
  vars:
    server_config: >-
      {{ lookup('ansible.builtin.template', '../../templates/server_config.json.j2') }}
  tasks:
    - name: Verify server_config.plugin_configuration.database is correct
      ansible.builtin.assert:
        that:
          - server_config.plugin_configuration.database.mysql.db_host == 'icat.domain'
          - server_config.plugin_configuration.database.mysql.db_name == 'db'
          - server_config.plugin_configuration.database.mysql.db_odbc_driver == 'Custom'
          - server_config.plugin_configuration.database.mysql.db_password == 'secret'
          - server_config.plugin_configuration.database.mysql.db_port == 1
          - server_config.plugin_configuration.database.mysql.db_username == 'irodsuser'


- name: Verify | custom system account name
  hosts: localhost
  gather_facts: false
  vars_files:
    - vars/system_account_name.yml
    - ../../vars/main.yml
  vars:
    service_account: >-
      {{ lookup('ansible.builtin.template', '../../templates/service_account.config.j2') }}
  tasks:
    - name: Verify service_account.config is correct
      ansible.builtin.assert:
        that:
          - service_account is search('IRODS_SERVICE_ACCOUNT_NAME=custom')
          - service_account is search('IRODS_SERVICE_GROUP_NAME=custom')


- name: Verify | custom system group name
  hosts: localhost
  gather_facts: false
  vars_files:
    - vars/system_group_name.yml
    - ../../vars/main.yml
  vars:
    service_account: >-
      {{ lookup('ansible.builtin.template', '../../templates/service_account.config.j2') }}
  tasks:
    - name: Verify service_account.config is correct
      ansible.builtin.assert:
        that:
          - service_account is search('IRODS_SERVICE_ACCOUNT_NAME=irods')
          - service_account is search('IRODS_SERVICE_GROUP_NAME=custom')


- name: Verify | jinja2 falsy quirks
  hosts: localhost
  gather_facts: false
  vars_files:
    - vars/jinja2_quirks.yml
    - ../../vars/main.yml
    - ../../vars/server_config.yml
    - ../../vars/irods_environment_server.yml
  vars:
    irods_environment: >-
      {{ lookup('ansible.builtin.template', '../../templates/irods_environment.json.j2') }}
    server_config: >-
      {{ lookup('ansible.builtin.template', '../../templates/server_config.json.j2') }}
  tasks:
    - name: Verify irods_environment.json is correct
      ansible.builtin.assert:
        that:
          - irods_environment.irods_client_server_negotiation == 'off'
          - irods_environment.irods_encryption_key_size == 0
          - irods_environment.irods_encryption_num_hash_rounds == 0
          - irods_environment.irods_encryption_salt_size == 0

    - name: Verify server_config.json is correct
      ansible.builtin.assert:
        that:
          - server_config.advanced_settings.default_number_of_transfer_threads == 0
          - server_config.pam_password_length == 0
          - server_config.server_control_plane_encryption_num_hash_rounds == 0


- name: Verify | setup_configuration default expansion
  hosts: localhost
  gather_facts: false
  vars_files:
    - ../../vars/main.yml
    - ../../vars/irods_environment_server.yml
  vars:
    host_access_control_config: >-
      {{ lookup('ansible.builtin.template', '../../templates/host_access_control_config.json.j2') }}
    hosts_config: "{{ lookup('ansible.builtin.template', '../../templates/hosts_config.json.j2') }}"
    irods_environment: >-
      {{ lookup('ansible.builtin.template', '../../templates/irods_environment.json.j2') }}
    server_config: >-
      {{ lookup('ansible.builtin.template', '../../templates/server_config.json.j2') }}
    setup_configuration: >-
      {{ lookup('ansible.builtin.template', '../../templates/setup_configuration.json.j2') }}
  tasks:
    - name: Verify contents
      ansible.builtin.assert:
        that:
          - setup_configuration.host_system_information.service_account_user_name == 'irods'
          - setup_configuration.host_system_information.service_account_group_name == 'irods'
          - setup_configuration.server_config == server_config
          - setup_configuration.hosts_config == hosts_config
          - setup_configuration.host_access_control_config == host_access_control_config
          - setup_configuration.service_account_environment == irods_environment
          - setup_configuration.admin_password == 'rods'
          - setup_configuration.default_resource_directory == None


- name: Verify | setup_configuration customization
  hosts: localhost
  gather_facts: false
  vars_files:
    - vars/setup_configuration_opts.yml
    - ../../vars/main.yml
    - ../../vars/irods_environment_server.yml
  vars:
    setup_configuration: >-
      {{ lookup('ansible.builtin.template', '../../templates/setup_configuration.json.j2') }}
  tasks:
    - name: Verify contents
      ansible.builtin.assert:
        that:
          - setup_configuration.host_system_information.service_account_user_name == 'account'
          - setup_configuration.host_system_information.service_account_group_name == 'group'
          - setup_configuration.admin_password == 'password'
          - setup_configuration.default_resource_directory == '/tmp'


- name: Verify | service ownership assignment
  hosts: all
  tasks:
    - name: Verify file not owned
      ansible.builtin.stat:
        path: /etc/irods/not_owner_test
      register: response
      failed_when: response.stat.pw_name == 'irods' or response.stat.gr_name == 'irods'

    - name: Verify file is owned
      ansible.builtin.stat:
        path: /etc/irods/owner_test
      register: response
      failed_when: response.stat.pw_name != 'irods' or response.stat.gr_name != 'irods'
